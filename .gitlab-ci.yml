image: hipay/gitlab-ci-base:jessie

variables:
  PROJECT_NAME_TEST:  ${DOCKER_SERVICE}-${CI_COMMIT_REF_SLUG}-${CI_PIPELINE_ID}

.after_template: &after_template
  after_script:
    - echo "Stop container for all environments"
    - docker-compose -p $PROJECT_NAME_TEST -f docker-compose.test.yml stop
    - docker-compose -p $PROJECT_NAME_TEST -f docker-compose.test.yml rm -fv
    - /tools/docker-network-rm.sh ${PROJECT_NAME_TEST}_magento
    - docker-compose -p $PROJECT_NAME_TEST-part2 -f docker-compose.test.yml stop
    - docker-compose -p $PROJECT_NAME_TEST-part2 -f docker-compose.test.yml rm -fv
    - /tools/docker-network-rm.sh $PROJECT_NAME_TEST-part2_magento
    - docker-compose -p $PROJECT_NAME_TEST-part3 -f docker-compose.test.yml stop
    - docker-compose -p $PROJECT_NAME_TEST-part3 -f docker-compose.test.yml rm -fv
    - /tools/docker-network-rm.sh $PROJECT_NAME_TEST-part3_magento
    - docker-compose -p $PROJECT_NAME_TEST-part4 -f docker-compose.test.yml stop
    - docker-compose -p $PROJECT_NAME_TEST-part4 -f docker-compose.test.yml rm -fv
    - /tools/docker-network-rm.sh $PROJECT_NAME_TEST-part4_magento
    - /tools/docker-rmi.sh ${REGISTRY_URL}/${DOCKER_STACK}-${DOCKER_SERVICE}_web:${CI_COMMIT_REF_SLUG}

.before_template: &before_template
  before_script:
    - sed -i -e "s/{HIPAY_API_USER_TEST\}/$HIPAY_API_USER_TEST/" ./bin/docker/conf/test/hipay.env.sample
    - sed -i -e "s/{HIPAY_API_PASSWORD_TEST\}/$HIPAY_API_PASSWORD_TEST/" ./bin/docker/conf/test/hipay.env.sample
    - sed -i -e "s/{HIPAY_TOKENJS_PUBLICKEY_TEST\}/$HIPAY_TOKENJS_PUBLICKEY_TEST/" ./bin/docker/conf/test/hipay.env.sample
    - sed -i -e "s/{HIPAY_TOKENJS_USERNAME_TEST\}/$HIPAY_TOKENJS_USERNAME_TEST/" ./bin/docker/conf/test/hipay.env.sample
    - sed -i -e "s/{HIPAY_SECRET_PASSPHRASE_TEST\}/$HIPAY_SECRET_PASSPHRASE_TEST/" ./bin/docker/conf/test/hipay.env.sample
    - sed -i -e "s|{MAGENTO_URL}|${DOCKER_SERVICE}-${CI_JOB_ID}-web|g" bin/docker/conf/test/mage.env.sample
    - sed -i -e "s|{MYSQL_HOST}|${DOCKER_SERVICE}-${CI_JOB_ID}-database|g" bin/docker/conf/test/mysql.env.sample
    - sh bin/docker/generate_dockerfile.sh

stages:
  - build-test-php7
  - test-php7
  - build-test-5-6
  - test-php5-6
  - build-test-php7-2
  - test-php7-2
  - clean-stack
  - analysis
  - package
  - build
  - deploy
  - sync

#########################################################################
###                                PHP 7-1                            ###
#########################################################################
build-test:
  stage: build-test-php7
  script:
    - sh bin/docker/generate_dockerfile.sh
    - sh ./bin/docker/init-environment.sh php7.1
  tags:
    - pi-commerce-no-overlay
  allow_failure: false
  except:
    variables:
      - $CI_COMMIT_MESSAGE =~ /skip-tests/

casperjs-part1-1:
  stage: test-php7
  <<: *before_template
  script:
    - sh ./bin/gitlab/run-tests.sh $PROJECT_NAME_TEST docker-compose.test.yml 0
  tags:
    - pi-commerce-no-overlay
  artifacts:
    paths:
      - bin/tests/errors/
    when: always
  allow_failure: false
  after_script:
    -  bash /tools/clean-job.sh $PROJECT_NAME_TEST docker-compose.test.yml magento ${DOCKER_STACK}-${DOCKER_SERVICE}_web:${CI_COMMIT_REF_SLUG}
  except:
    variables:
      - $CI_COMMIT_MESSAGE =~ /skip-tests/

casperjs-part2-1:
    stage: test-php7
    <<: *before_template
    script:
        - sh ./bin/gitlab/run-tests.sh $PROJECT_NAME_TEST-part2 docker-compose.test.yml 1
    tags:
        - pi-commerce-no-overlay
    artifacts:
        paths:
          - bin/tests/errors/
        when: always
    allow_failure: false
    except:
       variables:
          - $CI_COMMIT_MESSAGE =~ /skip-tests/
    after_script:
       -  bash /tools/clean-job.sh $PROJECT_NAME_TEST-part2 docker-compose.test.yml magento ${DOCKER_STACK}-${DOCKER_SERVICE}_web:${CI_COMMIT_REF_SLUG}

casperjs-part3-1:
    stage: test-php7
    <<: *before_template
    script:
        - sh ./bin/gitlab/run-tests.sh $PROJECT_NAME_TEST-part3 docker-compose.test.yml 2
    tags:
        - pi-commerce-no-overlay
    artifacts:
        paths:
          - bin/tests/errors/
        when: always
    allow_failure: false
    except:
      variables:
        - $CI_COMMIT_MESSAGE =~ /skip-tests/
    after_script:
       -  bash /tools/clean-job.sh $PROJECT_NAME_TEST-part3 docker-compose.test.yml magento ${DOCKER_STACK}-${DOCKER_SERVICE}_web:${CI_COMMIT_REF_SLUG}

casperjs-part4-1:
    stage: test-php7
    <<: *before_template
    script:
        - sh ./bin/gitlab/run-tests.sh $PROJECT_NAME_TEST-part4 docker-compose.test.yml 3
    tags:
        - pi-commerce-no-overlay
    artifacts:
        paths:
          - bin/tests/errors/
        when: always
    allow_failure: false
    except:
      variables:
        - $CI_COMMIT_MESSAGE =~ /skip-tests/
    after_script:
        -  bash /tools/clean-job.sh $PROJECT_NAME_TEST-part4 docker-compose.test.yml magento ${DOCKER_STACK}-${DOCKER_SERVICE}_web:${CI_COMMIT_REF_SLUG}

#########################################################################
###                                PHP 5-6                            ###
#########################################################################
build-test-5-6:
  stage: build-test-5-6
  script:
    - sh bin/docker/generate_dockerfile.sh
    - sh ./bin/docker/init-environment.sh php5-6
  tags:
    - pi-commerce-no-overlay
  allow_failure: false
  except:
    variables:
      - $CI_COMMIT_MESSAGE =~ /skip-tests/

casperjs-part1-2:
  stage: test-php5-6
  <<: *before_template
  script:
    - sh ./bin/gitlab/run-tests.sh $PROJECT_NAME_TEST docker-compose.test-php5-6.yml 0
  tags:
    - pi-commerce-no-overlay
  artifacts:
    paths:
      - bin/tests/errors/
    when: always
  allow_failure: false
  except:
    variables:
      - $CI_COMMIT_MESSAGE =~ /skip-tests/
  after_script:
    - bash /tools/clean-job.sh $PROJECT_NAME_TEST docker-compose.test-php5-6.yml magento ${DOCKER_STACK}-${DOCKER_SERVICE}_web:${CI_COMMIT_REF_SLUG}

casperjs-part2-2:
    stage: test-php5-6
    <<: *before_template
    script:
        - sh ./bin/gitlab/run-tests.sh $PROJECT_NAME_TEST-part2 docker-compose.test-php5-6.yml 1
    tags:
        - pi-commerce-no-overlay
    artifacts:
      paths:
        - bin/tests/errors/
      when: always
    allow_failure: false
    except:
      variables:
        - $CI_COMMIT_MESSAGE =~ /skip-tests/
    after_script:
      - bash /tools/clean-job.sh $PROJECT_NAME_TEST-part2 docker-compose.test-php5-6.yml magento ${DOCKER_STACK}-${DOCKER_SERVICE}_web:${CI_COMMIT_REF_SLUG}

casperjs-part3-2:
    stage: test-php5-6
    <<: *before_template
    script:
        - sh ./bin/gitlab/run-tests.sh $PROJECT_NAME_TEST-part3 docker-compose.test-php5-6.yml 2
    tags:
        - pi-commerce-no-overlay
    artifacts:
      paths:
        - bin/tests/errors/
      when: always
    allow_failure: false
    after_script:
      - bash /tools/clean-job.sh $PROJECT_NAME_TEST-part3 docker-compose.test-php5-6.yml magento ${DOCKER_STACK}-${DOCKER_SERVICE}_web:${CI_COMMIT_REF_SLUG}
    except:
      variables:
        - $CI_COMMIT_MESSAGE =~ /skip-tests/

casperjs-part4-2:
    stage: test-php5-6
    <<: *before_template
    script:
        - sh ./bin/gitlab/run-tests.sh $PROJECT_NAME_TEST-part4 docker-compose.test-php5-6.yml 3
    tags:
        - pi-commerce-no-overlay
    artifacts:
      paths:
        - bin/tests/errors/
      when: always
    allow_failure: false
    except:
      variables:
        - $CI_COMMIT_MESSAGE =~ /skip-tests/
    after_script:
      - bash /tools/clean-job.sh $PROJECT_NAME_TEST-part4 docker-compose.test-php5-6.yml magento ${DOCKER_STACK}-${DOCKER_SERVICE}_web:${CI_COMMIT_REF_SLUG}

build-test-php-7-2:
  stage: build-test-php7-2
  script:
    - sh bin/docker/generate_dockerfile.sh
    - sh ./bin/docker/init-environment.sh php7-2
  tags:
    - pi-commerce-no-overlay
  allow_failure: false
  except:
    variables:
      - $CI_COMMIT_MESSAGE =~ /skip-tests/


#########################################################################
###                                PHP 7-2                            ###
#########################################################################
casperjs-part1-3:
  stage: test-php7-2
  <<: *before_template
  script:
    - sh ./bin/gitlab/run-tests.sh $PROJECT_NAME_TEST docker-compose.test-php7-2.yml 0
  tags:
    - pi-commerce-no-overlay
  artifacts:
    paths:
      - bin/tests/errors/
    when: always
  allow_failure: false
  except:
    variables:
      - $CI_COMMIT_MESSAGE =~ /skip-tests/
  after_script:
    -  bash /tools/clean-job.sh $PROJECT_NAME_TEST docker-compose.test-php7-2.yml magento ${DOCKER_STACK}-${DOCKER_SERVICE}_web:${CI_COMMIT_REF_SLUG}

casperjs-part2-3:
    stage: test-php7-2
    <<: *before_template
    script:
        - sh ./bin/gitlab/run-tests.sh $PROJECT_NAME_TEST-part2 docker-compose.test-php7-2.yml 1
    tags:
        - pi-commerce-no-overlay
    artifacts:
        paths:
          - bin/tests/errors/
        when: always
    allow_failure: false
    except:
      variables:
        - $CI_COMMIT_MESSAGE =~ /skip-tests/
    after_script:
       -  bash /tools/clean-job.sh $PROJECT_NAME_TEST-part2 docker-compose.test-php7-2.yml magento ${DOCKER_STACK}-${DOCKER_SERVICE}_web:${CI_COMMIT_REF_SLUG}

casperjs-part3-3:
    stage: test-php7-2
    <<: *before_template
    script:
        - sh ./bin/gitlab/run-tests.sh $PROJECT_NAME_TEST-part3 docker-compose.test-php7-2.yml 2
    tags:
        - pi-commerce-no-overlay
    artifacts:
        paths:
          - bin/tests/errors/
        when: always
    allow_failure: false
    except:
      variables:
        - $CI_COMMIT_MESSAGE =~ /skip-tests/
    after_script:
       -  bash /tools/clean-job.sh $PROJECT_NAME_TEST-part3 docker-compose.test-php7-2.yml magento ${DOCKER_STACK}-${DOCKER_SERVICE}_web:${CI_COMMIT_REF_SLUG}

casperjs-part4-3:
    stage: test-php7-2
    <<: *before_template
    script:
        - sh ./bin/gitlab/run-tests.sh $PROJECT_NAME_TEST-part4 docker-compose.test-php7-2.yml 3
    tags:
        - pi-commerce-no-overlay
    artifacts:
        paths:
          - bin/tests/errors/
        when: always
    allow_failure: false
    except:
      variables:
        - $CI_COMMIT_MESSAGE =~ /skip-tests/
    after_script:
        -  bash /tools/clean-job.sh $PROJECT_NAME_TEST-part4 docker-compose.test-php7-2.yml magento ${DOCKER_STACK}-${DOCKER_SERVICE}_web:${CI_COMMIT_REF_SLUG}

clean-stack-test:
  stage: clean-stack
  script:
    - echo "Clean stack test"
  <<: *after_template
  tags:
    - pi-commerce-no-overlay
  when: always
  except:
    variables:
      - $CI_COMMIT_MESSAGE =~ /skip-tests/

sonarqube:
  stage: analysis
  image: ciricihq/gitlab-sonar-scanner
  variables:
    SONAR_URL: http://172.17.0.1:19000
    SONAR_ANALYSIS_MODE: preview
    SONAR_TOKEN: $SONAR_LOGIN
  script:
    - /usr/bin/sonar-scanner-run.sh
  tags:
    - pi-commerce-no-overlay

sonarqube-reports:
  stage: analysis
  image: ciricihq/gitlab-sonar-scanner
  variables:
    SONAR_URL: http://172.17.0.1:19000
    SONAR_ANALYSIS_MODE: "publish"
    SONAR_TOKEN: $SONAR_LOGIN
  script:
    - unset CI_BUILD_REF && /usr/bin/sonar-scanner-run.sh
  tags:
    - pi-commerce-no-overlay

package:
 stage: package
 before_script:
    - apt-get update
    - apt-get install -y zip php5 libapache2-mod-php5
 script:
    - echo " Package module $CI_COMMIT_REF_SLUG"
    - cd src/lib/Hipay && composer install && cd ../../..
    - rm -Rf ./vendor && cp ./composer.json.dist ./composer.json && composer install &&  sh ./bin/deployment/packaging.sh
    - mkdir $CI_COMMIT_REF_SLUG
    - mkdir $CI_COMMIT_REF_SLUG/package
    - cp ./dist/*.tgz $CI_COMMIT_REF_SLUG/package/Allopass_Hipay-${CI_COMMIT_REF_SLUG}.tgz
    - ./bin/deployment/deploy_project.sh
 tags:
    - pi-commerce-no-overlay
 artifacts:
  paths:
    - ./dist

build:
  stage: build
  script:
    - docker-compose -f docker-compose.acceptance.yml build
    - docker-compose -f docker-compose.acceptance.yml push
    - docker rmi ${REGISTRY_URL}/${DOCKER_STACK}-${DOCKER_SERVICE}_web:${CI_COMMIT_REF_SLUG}
  tags:
    - pi-commerce-no-overlay


deploy2Recette:
 stage: deploy
 script:
    - echo "Deploy from registry"
      # Substitute env variables which dont exists on the distant machine
    - sed -i -e "s/{HIPAY_API_USER_TEST\}/$HIPAY_API_USER_RE7/" ./bin/docker/conf/acceptance/hipay.env.sample
    - sed -i -e "s/{HIPAY_API_PASSWORD_TEST\}/$HIPAY_API_PASSWORD_RE7/" ./bin/docker/conf/acceptance/hipay.env.sample
    - sed -i -e "s/{HIPAY_TOKENJS_PUBLICKEY_TEST\}/$HIPAY_TOKENJS_PUBLICKEY_RE7/" ./bin/docker/conf/acceptance/hipay.env.sample
    - sed -i -e "s/{HIPAY_TOKENJS_USERNAME_TEST\}/$HIPAY_TOKENJS_USERNAME_RE7/" ./bin/docker/conf/acceptance/hipay.env.sample
    - sed -i -e "s/{HIPAY_SECRET_PASSPHRASE_TEST\}/$HIPAY_SECRET_PASSPHRASE_RE7/" ./bin/docker/conf/acceptance/hipay.env.sample
    - sed -i -e "s|\${DOCKER_STACK}|$DOCKER_STACK|g" docker-compose.acceptance.yml
    - sed -i -e "s|\${DOCKER_SERVICE}|$DOCKER_SERVICE|g" docker-compose.acceptance.yml
    - sed -i -e "s|\${CI_COMMIT_REF_SLUG}|$CI_COMMIT_REF_SLUG|g" docker-compose.acceptance.yml
    - sed -i -e "s|\${CI_JOB_ID}|$CI_JOB_ID|g" docker-compose.acceptance.yml
    - sed -i -e "s|\${REGISTRY_URL}|$REGISTRY_URL|g" docker-compose.acceptance.yml
    - sed -i -e "s|{MAGENTO_URL}|${DOCKER_STACK}-${DOCKER_SERVICE}-${CI_COMMIT_REF_SLUG}.hipay-pos-platform.com|g" bin/docker/conf/acceptance/mage.env.sample
    - sed -i -e "s|{MYSQL_HOST}|${DOCKER_SERVICE}-${CI_JOB_ID}-database|g" bin/docker/conf/acceptance/mysql.env.sample
      # Change path for relative path to environment files
    - sed -i -e "s|./bin/docker/conf/acceptance/mysql.env.sample|mysql.env.sample|g" docker-compose.acceptance.yml
    - sed -i -e "s|./bin/docker/conf/acceptance/mage.env.sample|mage.env.sample|g" docker-compose.acceptance.yml
    - sed -i -e "s|./bin/docker/conf/acceptance/hipay.env.sample|hipay.env.sample|g" docker-compose.acceptance.yml
      # Push file on distant machine and launch deploy
    - bash /tools/deployToDockerMachine.sh -e ./bin/docker/conf/acceptance/hipay.env.sample -e ./bin/docker/conf/acceptance/mysql.env.sample -e ./bin/docker/conf/acceptance/mage.env.sample -s docker-compose.acceptance.yml -n $DOCKER_STACK-$DOCKER_SERVICE-$CI_COMMIT_REF_SLUG
 tags:
    - pi-commerce-no-overlay
 when: manual
 environment:
   name: review/${CI_COMMIT_REF_SLUG}
   url: https://${DOCKER_STACK}-${DOCKER_SERVICE}-${CI_COMMIT_REF_SLUG}.hipay-pos-platform.com
   on_stop: stop_review
 only:
    - branches

stop_review:
  stage: deploy
  variables:
    GIT_STRATEGY: none
  script:
  - docker stack rm $DOCKER_STACK-$DOCKER_SERVICE-$CI_COMMIT_REF_SLUG
  when: manual
  environment:
    name: review/${CI_COMMIT_REF_SLUG}
    action: stop

sync:
  stage: sync
  tags:
    - pi-commerce-no-overlay
  script:
    - git clone --mirror https://$GITLAB_USER:$GITLAB_PASSWORD@gitlab.hipay.org/pi-ecommerce/hipay-fullservice-sdk-magento1.git
    - cd hipay-fullservice-sdk-magento1.git
    - git push --mirror https://$GITHUB_USER:$GITHUB_PASSWORD@github.com/hipay/hipay-fullservice-sdk-magento1.git
  allow_failure: true
